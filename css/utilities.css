.container{
    
    max-width: 1100px;/*If the content inside the element is smaller than 1100 pixels, the element's width will be equal to the content width. If the content is larger than 1100 pixels, the element's width will be capped at 1100 pixels.*/

    margin: 0 auto; /*Using margin: 0 auto; can be useful for creating responsive layouts that adapt to different screen sizes and device types. It also helps maintain a consistent and visually appealing alignment of content on the page.*/

    padding: 0 25px;

    overflow: auto;   /*The CSS overflow property controls what happens to content that is too big to fit into an area.
    
    overflow: auto; will only display scrollbars when necessary. If the content is smaller than the element's dimensions, no scrollbars will be displayed. To force scrollbars to always be displayed, you can use overflow: scroll; instead.*/

}


.flex{

    display: flex;
    justify-content: space-between;/* works on x axis.
    the first item at the start of the main axis and the last item at the end of the main axis.*/
    align-items: center;/* Y axis*/
    
}

