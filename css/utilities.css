.container{
    
    max-width: 1100px;/*If the content inside the element is smaller than 1100 pixels, the element's width will be equal to the content width. If the content is larger than 1100 pixels, the element's width will be capped at 1100 pixels.*/

    margin: 0 auto; /*Using margin: 0 auto; can be useful for creating responsive layouts that adapt to different screen sizes and device types. It also helps maintain a consistent and visually appealing alignment of content on the page.*/

    padding: 0 25px;

    overflow: auto;   /*The CSS overflow property controls what happens to content that is too big to fit into an area.
    
    overflow: auto; will only display scrollbars when necessary. If the content is smaller than the element's dimensions, no scrollbars will be displayed. To force scrollbars to always be displayed, you can use overflow: scroll; instead.*/

}


.flex{

    display: flex;
    justify-content: space-between;/* works on x axis.
    the first item at the start of the main axis and the last item at the end of the main axis.*/
    align-items: center;/* Y axis*/
    
}
.grid{

  display: grid;
  grid-template-columns: repeat(2, 1fr);/*repeat(2, 1fr), which creates two columns of equal width within the grid container.
  create a grid container with two equal-width columns, each taking up 1 fraction unit of the available space. */
  gap:20px;
  justify-content: center;
  align-items: center;
  height: 100%;

}

.card{

    background-color: #fff;
    color: #333;
    border-radius: 10px;
    box-shadow: 0 3px 10px rgba(0,0,0,0.2);
    padding: 20px;
    margin:10px;

}

.btn{

    display: inline-block;
    padding: 10px 30px;
    cursor: pointer;/*When cursor: pointer; is applied to an element, it changes the default cursor to a hand icon, indicating to the user that the element is clickable or interactive.*/
    background: var(--primary-color);
    color: #fff;
    border: none;
    border-radius: 5px;
    


}

.btn-outline{
    background-color: transparent;
    border: 1px #fff solid;

}

.btn:hover{
    transform: scale(.9);/*scale(.9), which scales the size of the element down to 90% of its original size.*/
}

/* backgrounds and color buttons
bg=background
btn=button

*/
.bg-primary,.btn-primary{
    background-color: var(--primary-color);
    color: #fff;
}

.bg-secondary,.btn-secondary{
    background-color: var(--secondary-color);
    color: #fff;
}
.bg-dark,.btn-dark{
    background-color: var(--dark-color);
    color: #fff;
}

.bg-light,.btn-light{
    background-color: var(--light-color);
    color: #333;
}

.bg-primary  a,.btn-primary a,.bg-secondary a,.btn-secondary a,.bg-dark a,.btn-dark a,.bg-light a,.btn-light a{
  color: #fff;
}


/*text sizes

sm=small
md=medium
lg=large

*/

.lead{
    font-size: 20px;
}
.sm{
    font-size: 1rem;
}
.md{
    font-size: 2rem;
}
.lg{
    font-size: 3rem;
}
.xl{
    font-size: 4rem;
}
.text-center{
    text-align: center;
}

/*margin*/
.my-1{

    margin: 1rem 0;
}
.my-2{

    margin: 1.5rem 0;
}

.my-3{

    margin: 2rem 0;
}

.my-4{

    margin: 3rem 0;
}

.my-5{

    margin: 4rem 0;
}

.m-1{

    margin: 1rem ;
}
.m-2{

    margin: 1.5rem ;
}

.m-3{

    margin: 2rem ;
}

.m-4{

    margin: 3rem ;
}

.m-5{

    margin: 4rem ;
}

/*padding*/

.py-1{

    padding: 1rem 0;
}
.py-2{

    padding: 1.5rem 0;
}

.py-3{

    padding: 2rem 0;
}

.py-4{

    padding: 3rem 0;
}

.py-5{

    padding: 4rem 0;
}

.p-1{

    padding: 1rem ;
}
.p-2{

    padding: 1.5rem ;
}

.p-3{

    padding: 2rem ;
}

.p-4{

    padding: 3rem ;
}

.p-5{

    padding: 4rem ;
}
